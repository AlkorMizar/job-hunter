basePath: /
definitions:
  model.AuthInfo:
    properties:
      email:
        type: string
      password:
        maxLength: 40
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  model.NewUser:
    properties:
      cPassword:
        maxLength: 40
        minLength: 5
        type: string
      email:
        type: string
      login:
        maxLength: 40
        minLength: 3
        type: string
      password:
        type: string
    required:
    - cPassword
    - email
    - login
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server celler server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth/out:
    post:
      consumes:
      - application/json
      description: log out user, clear token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Log out
      tags:
      - auth
  /unauth/auth:
    post:
      consumes:
      - application/json
      description: if user exists sets cookie with JWT token
      parameters:
      - description: Email and password
        in: body
        name: authInfo
        required: true
        schema:
          $ref: '#/definitions/model.AuthInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Authorization
      tags:
      - auth
  /unauth/reg:
    post:
      consumes:
      - application/json
      description: creates new user if unique login and email
      parameters:
      - description: Login, email, password
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/model.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Registration
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Set-Cookie
    type: apiKey
swagger: "2.0"
