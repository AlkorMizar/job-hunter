basePath: /
definitions:
  model.AuthInfo:
    properties:
      email:
        default: test@test.com
        type: string
      password:
        default: test1
        maxLength: 40
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  model.JSONResult:
    properties:
      data: {}
      message:
        type: string
    type: object
  model.NewUser:
    properties:
      cPassword:
        default: test1
        maxLength: 40
        minLength: 5
        type: string
      email:
        default: test@test.com
        type: string
      login:
        default: test
        maxLength: 40
        minLength: 3
        type: string
      password:
        default: test1
        type: string
      roles:
        items:
          type: string
        type: array
    required:
    - cPassword
    - email
    - login
    - password
    - roles
    type: object
  model.Token:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server celler server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: If user exists returns JWT token
      parameters:
      - description: Email and password
        in: body
        name: authInfo
        required: true
        schema:
          $ref: '#/definitions/model.AuthInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Message and token
          schema:
            allOf:
            - $ref: '#/definitions/model.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/model.Token'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.JSONResult'
      summary: Authentication
      tags:
      - auth
  /reg:
    post:
      consumes:
      - application/json
      description: Creates new user if unique login and email
      parameters:
      - description: Login, email, password
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/model.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.JSONResult'
      summary: Registration
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
